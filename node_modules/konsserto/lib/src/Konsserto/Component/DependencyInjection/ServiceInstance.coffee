###
 * This file is part of the Konsserto package.
 *
 * (c) Jessym Reziga <jessym@konsserto.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
###

cc = use('cli-color')

Tools = use('@Konsserto/Component/Static/Tools')

#
# ServiceInstance
#
# @author Jessym Reziga <jessym@konsserto.com>
#
class ServiceInstance


	constructor:(@serviceDefinition) ->
		console.log('[Service] Setup '+ @getLabel()+' Service : ' + cc.green('[' + @getDefinition().getName() + ']'))

	getDefinition:() ->
		return @serviceDefinition

	getLabel:() ->
		switch @getDefinition().getType()
			when 'kernel' then return 'Core'
			when 'konsserto' then return 'Konsserto'
			when 'global' then return 'Global'
			else return 'Bundle'

	setServiceDefinition:(@serviceDefinition) ->
		return this

	getService:() ->
		try
			return use(@getDefinition().getClassName())
		catch e
			throw new Error('An error occured in '+@getDefinition().getClassName() + '\n'+ e.message)

	setInstance:(@instance) ->
		return this

	getInstance: () ->
		return @instance

	instanceExists:() ->
		if @getInstance()?
			return true
		return false

	evaluateInstance:(container) ->
		serviceNamespace = @getService()
		eval("instance = new serviceNamespace(" + @getDefinition().getCompilerArguments('container') + ");")
		@setInstance(instance)


module.exports = ServiceInstance