###
 * This file is part of the Konsserto package.
 *
 * (c) Jessym Reziga <jessym@konsserto.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
###

cc = use('cli-color')
orm = use('orm')
wait = use('wait.for')

CONFIG = use('/app/config/config')

#
# Database
#
# @author Jessym Reziga <jessym@konsserto.com>
#
class Database


	constructor: (@entityManager) ->
		@ready = false
		@debug = CONFIG.databaseDebug ? false

		@resetDefaultOptions(orm)

		if CONFIG.databaseDriver?
			@active = true

		if @isActive()
			@driver = CONFIG.databaseDriver
			@user = CONFIG.databaseUser
			@password = CONFIG.databasePassword
			@host = CONFIG.databaseHost
			@database = CONFIG.databaseName
			wait.launchFiber(@connect)

	getInstance: ()->
		return @instance

	getAvailableDrivers: () ->
		return ['mysql','postgres','redshift','sqlite3','mongodb']

	connect: () =>
		@instance = wait.forMethod(orm,'connect',@getCredentials());
		@resetDefaultOptions(@instance)
		@ready = true
		@entityManager.load(@instance)
		console.log(cc.white.bgBlue('[Database]')+' Connected to : '+CONFIG.databaseUser+'@'+CONFIG.databaseHost)


	asyncConnect: (callback) =>
		orm.connect(@getCredentials(),(err,db) =>
			@resetDefaultOptions(db)
			@ready = true
			@entityManager.load(db)
			console.log(cc.white.bgBlue('[Database]')+' Connected to : '+CONFIG.databaseUser+'@'+CONFIG.databaseHost)
			callback()
		)


	isReady: () ->
		return @ready

	getDriver:() ->
		return @driver

	getPassword:() ->
		return @password

	getHost:() ->
		return @host

	getDatabase:() ->
		return @database

	getUser:() ->
		return @user

	isActive:() ->
		return @active ? false

	resetDefaultOptions:(object) ->
		object.settings.set('instance.cache',true)
		object.settings.set('instance.autoFetch',true)
		object.settings.set('connection.debug',@debug)

	getCredentials: ()->
		return "#{@getDriver()}://#{@getUser()}:#{@getPassword()}@#{@getHost()}/#{@getDatabase()}"


module.exports = Database