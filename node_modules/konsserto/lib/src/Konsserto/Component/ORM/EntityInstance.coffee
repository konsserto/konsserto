###
 * This file is part of the Konsserto package.
 *
 * (c) Jessym Reziga <jessym@konsserto.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
###

EntityRepository = use('@Konsserto/Component/ORM/EntityRepository')

#
# EntityInstance
#
# @author Jessym Reziga <jessym@konsserto.com>
#
class EntityInstance


	constructor:(@entityDefinition, @database, @em = null) ->
		model = @entityDefinition.getModel()
		@modelInstance = @database.define(model.getTableName(),model.getFields(),model.getOptions())

		repositoryClass = EntityRepository

		if model.hasRepository()
			try
				repositoryClass = use(model.getRepositoryPath());
			catch e
				throw new Error('The repository path \''+model.getRepositoryPath()+'\' doesn\'t exists.\n'+e.message)

		@repository = new repositoryClass(this)

	getDatabase:() ->
		return @database

	getEntityManager:() ->
		return @em

	getDefinition:() ->
		return @entityDefinition

	setDefinition:(@entityDefinition) ->
		return this

	getModelInstance:() ->
		return @modelInstance

	setModelInstance:(@modelInstance) ->
		return this

	getRepository:() ->
		return @repository

	setRepository:(@repository) ->
		return this


module.exports = EntityInstance