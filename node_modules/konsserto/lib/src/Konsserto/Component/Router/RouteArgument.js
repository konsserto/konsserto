
/*
 * This file is part of the Konsserto package.
 *
 * (c) Jessym Reziga <jessym@konsserto.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
var RouteArgument;

RouteArgument = (function() {
  function RouteArgument(name, rawArguments) {
    this.name = name;
    this.rawArguments = rawArguments;
    if (this.rawArguments['match'] != null) {
      this.match = ':' + this.rawArguments['match'];
    } else {
      this.match = ':' + this.getName();
    }
    if (this.rawArguments['default'] != null) {
      this["default"] = this.rawArguments['default'];
      this.defaultExists = true;
    } else {
      this["default"] = '';
      this.defaultExists = false;
    }
  }

  RouteArgument.prototype.getName = function() {
    return this.name;
  };

  RouteArgument.prototype.setName = function(name) {
    this.name = name;
    return this;
  };

  RouteArgument.prototype.hasDefault = function() {
    return this.defaultExists;
  };

  RouteArgument.prototype.getDefaultValue = function() {
    return this["default"];
  };

  RouteArgument.prototype.setDefault = function(_default) {
    this["default"] = _default;
    return this;
  };

  RouteArgument.prototype.getMatch = function() {
    return this.match;
  };

  RouteArgument.prototype.setMatch = function(match) {
    this.match = match;
    return this;
  };

  return RouteArgument;

})();

module.exports = RouteArgument;
