###
 * This file is part of the Konsserto package.
 *
 * (c) Jessym Reziga <jessym@konsserto.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
###

# SocketDefinition
# @author Jessym Reziga <jessym@konsserto.com>
class SocketDefinition


  # Class constructor
  # @param {Object} registeredSocket The socket in the config/routing.socket file
  # @param {String} prefix The prefix concerned
  constructor: (@registeredSocket, prefix) ->
    controller = @registeredSocket.controller.split ':'
    @name = @registeredSocket.name
    @bundleName = controller[0]
    @controllerName = controller[1]
    @methodName = controller[2]
    @async = @registeredSocket.async ? false
    @connection = @registeredSocket.connection ? false
    @listener = @registeredSocket.listener
    @needPrefix = true
    @needPrefix = false if @registeredSocket.prefix? && !@registeredSocket.prefix
    @prefix = prefix
    @rawEvent = @registeredSocket.event
    @event = @addPrefixOnSocket(prefix)

  # Add prefix on socket if needed
  # @param {String} prefix The prefix of the socket
  # @return {String} The prefix and the raw event
  addPrefixOnSocket: (prefix) ->
    if prefix? && @needPrefix
      return prefix + @rawEvent

    return @rawEvent

  # @param {Object} event The socket event
  setEvent: (@event) ->
    return this

  # @param {String} bundleName The bundle name
  setBundleName: (@bundleName) ->
    return this

  # @param {String} controllerName The controller name
  setControllerName: (@controllerName) ->
    return this

  # @param {String} methodName The method name
  setMethodName: (@methodName) ->
    return this

  # @param {Boolean} async If the socket async ?
  setAsync: (@async) ->
    return this

  # @param {String} name The socket name
  setName: (@name) ->
    return this

  # @return {Boolean} Is the socket asynchronous ?
  isAsynchronous: () ->
    return @async

  # @return {Boolean} Is the socket connected ?
  isConnectionListener: () ->
    return @connection

  # @return {Object} The event concerned
  getEvent: () ->
    return @event

  # @return {String} The raw event concerned
  getRawEvent: () ->
    return @rawEvent

  # @return {String} The bundle name
  getBundleName: () ->
    return @bundleName

  # @return {String} The controller name
  getControllerName: () ->
    return @controllerName

  # @return {String} The method name
  getMethodName: () ->
    return @methodName

  # @return {String} The socket name
  getName: () ->
    return @name

  # @return {Object} The socket listener
  getListener: () ->
    return @listener


module.exports = SocketDefinition