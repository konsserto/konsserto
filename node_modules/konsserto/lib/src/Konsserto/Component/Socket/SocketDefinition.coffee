###
 * This file is part of the Konsserto package.
 *
 * (c) Jessym Reziga <jessym@konsserto.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
###

#
# SocketDefinition
#
# @author Jessym Reziga <jessym@konsserto.com>
#
class SocketDefinition


	constructor:(@registeredSocket, prefix) ->
		controller = @registeredSocket.controller.split ':'
		@name = @registeredSocket.name
		@bundleName = controller[0]
		@controllerName = controller[1]
		@methodName = controller[2]
		@async = @registeredSocket.async ? false
		@connection = @registeredSocket.connection ? false
		@listener = @registeredSocket.listener

		@needPrefix = true
		@needPrefix = false if @registeredSocket.prefix? && !@registeredSocket.prefix

		@prefix = prefix
		@rawEvent = @registeredSocket.event
		@event = @addPrefixOnSocket(prefix)

	addPrefixOnSocket:(prefix) ->
		if prefix? && @needPrefix
			return prefix + @rawEvent

		return @rawEvent

	setEvent:(@event) ->
		return this

	setBundleName:(@bundleName) ->
		return this

	setControllerName:(@controllerName) ->
		return this

	setMethodName:(@methodName) ->
		return this

	setAsync:(@async) ->
		return this

	setName:(@name) ->
		return this

	isAsynchronous:() ->
		return @async

	isConnectionListener:() ->
		return @connection

	getEvent:() ->
		return @event

	getRawEvent:() ->
		return @rawEvent

	getBundleName:() ->
		return @bundleName

	getControllerName:() ->
		return @controllerName

	getMethodName:() ->
		return @methodName

	getName:() ->
		return @name

	getListener:() ->
		return @listener


module.exports = SocketDefinition