###
 * This file is part of the Konsserto package.
 *
 * (c) Jessym Reziga <jessym@konsserto.com>
 * (c) Marvin Frachet <marvin@konsserto.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
###


# MiddlewareDefinition
#
# @author Jessym Reziga <jessym@konsserto.com>
class MiddlewareDefinition

  # @param {Object} registeredMiddleware The registeredMiddleware (corresponding to the line in config/routing.coffee
  constructor: (@registeredMiddleware) ->
    middleware = @registeredMiddleware.middleware.split ':'
    @name = @registeredMiddleware.name
    @pattern = '*'
    if @registeredMiddleware.pattern
      @pattern = @registeredMiddleware.pattern
    @bundleName = middleware[0]
    @middlewareName = middleware[1]
    @methodName = middleware[2]

  # @param {String} bundleName The bundle name concerned by the middleware
  setBundleName: (@bundleName) ->
    return this

  # @param {String} middlewareName The middleware name
  setMiddlewareName: (@middlewareName) ->
    return this

  # @param {String} methodName The method name of the middleware
  setMethodName: (@methodName) ->
    return this

  # @param {String} name The name
  setName: (@name) ->
    return this

  # @return {String} The bundle name
  getBundleName: () ->
    return @bundleName

  # @return {String} The middleware name
  getMiddlewareName: () ->
    return @middlewareName

  # @return {String} The method name
  getMethodName: () ->
    return @methodName

  # @return {String} The name
  getName: () ->
    return @name

  # @param {String} pattern The pattern of the middleware
  setPattern: (@pattern)->
    return this

  # @return {String} The pattern
  getPattern: ()->
    return @pattern


module.exports = MiddlewareDefinition