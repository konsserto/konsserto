###
 * This file is part of the Konsserto package.
 *
 * (c) Marvin Frachet <marvin@konsserto.com>
 * (c) Jessym Reziga <jessym@konsserto.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
###

# Middleware
#
# @author Marvin Frachet <marvin@konsserto.com>
class Middleware

  # @param {ServiceContainer} container The service container unique instance
  setContainer: (@container) ->
    return this

  # @param {Application} app The application unique instance
  setApplication: (@app) ->
    return this

  # @return {RequestStack} The current request in the request stack
  getRequest: () ->
    return @container.get('Request_Stack').getCurrentRequest()

  # @return {Object} The response of the middleware
  getResponse: () ->
    return @response

  # @param {Object} request The request of the middleware
  setRequest: (@request) ->
    return this

  # @param {Object} response The response of the middleware
  setResponse: (@response) ->
    return this

  # @param {Object} next The next object of the middleware
  setNext: (@next) ->
    return this

  # @param {String} name The name of the service to return
  # @return {Object} The service concerned
  get: (name)->
    return @container.get(name)

  # @return {ServiceContainer} The service container object
  getContainer: () ->
    return @container

  # @return {Application} The application object
  getApplication: () ->
    return @application

  # @return {Object} The next object
  next: () ->
    return @next()


module.exports = Middleware