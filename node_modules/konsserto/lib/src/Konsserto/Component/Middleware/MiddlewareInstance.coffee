###
 * This file is part of the Konsserto package.
 *
 * (c) Jessym Reziga <jessym@konsserto.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
###

Tools = use('@Konsserto/Component/Static/Tools')

#
# MiddlewareInstance
#
# @author Jessym Reziga <jessym@konsserto.com>
#
class MiddlewareInstance


	constructor:(@middlewareDefinition, @controllerDefinition) ->
		@controller = new controllerDefinition
		console.log('[Middleware] middleware: ' + @getControllerName() + ':' + @getMethod())

	setController:(@controller) ->
		return this

	setMiddlewareDefinition:(@middlewareDefinition) ->
		return this

	setControllerDefinition:(@controllerDefinition) ->
		return this

	getDefinition:() ->
		return @middlewareDefinition

	getController:() ->
		return @controller

	getControllerName:() ->
		return @getController().constructor.name

	getControllerDefinition:() ->
		return @controllerDefinition

	getMethod:() ->
		return @getDefinition().getMethodName() + 'Action'

	getRequest:() ->
		return @request

	getResponse:() ->
		return @response

	setRequest:(@request) ->
		@getController().setRequest(@request)
		return this

	setResponse:(@response) ->
		@getController().setResponse(@response)
		return this

	setNext:(@next) ->
    @getController().setNext(@next)
    return this

	getNext:() ->
		return @next

	methodExists:() ->
		method = @getMethod()

		if !method? || !@getController()[method]?
			return false

		return true

	getMethodInstance:() ->
    if @getController()[@getMethod()]?
      return @getController()[@getMethod()]

    throw new Error('No method '+@getMethod()+' in middleware '+@getDefinition().getMiddlewareName())

	getResponse:() ->
		return Tools.call(@getMethodInstance(),{})

module.exports = MiddlewareInstance