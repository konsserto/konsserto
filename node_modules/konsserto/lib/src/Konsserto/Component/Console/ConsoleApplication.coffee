###
 * This file is part of the Konsserto package.
 *
 * (c) Jessym Reziga <jessym@konsserto.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
###

cc = use('cli-color')
wait = use('wait.for')

ArgvInput = use('@Konsserto/Component/Console/Input/ArgvInput')
ArrayInput = use('@Konsserto/Component/Console/Input/ArrayInput')
Command = use('@Konsserto/Component/Console/Command')
HelpCommand = use('@Konsserto/Component/Console/Command/HelpCommand')
InputArgument = use('@Konsserto/Component/Console/Input/InputArgument')
InputDefinition = use('@Konsserto/Component/Console/Input/InputDefinition')
InputOption = use('@Konsserto/Component/Console/Input/InputOption')
ListCommand = use('@Konsserto/Component/Console/Command/ListCommand')

#
# ConsoleApplication
#
# @author Jessym Reziga <jessym@konsserto.com>
#
class ConsoleApplication


	constructor:(@name,@version) ->
		@verbose = 0
		@commands = {}
		@running = ''
		@needHelp = false
		@definition = @getDefaultInputDefinition()

		for command in @getDefaultCommands()
			@add(command)

	getDefinition:() ->
		return @definition

	getDefaultInputDefinition:() ->
		return new InputDefinition([
			new InputArgument('command', InputArgument.REQUIRED, 'The command to execute'),
			new InputOption('--help',           '-h', InputOption.VALUE_NONE, 'Display this help message.'),
			new InputOption('--verbose',        '-v', InputOption.VALUE_NONE, 'Increase the verbosity of messages'),
			new InputOption('--version',        '-V', InputOption.VALUE_NONE, 'Display this application version.'),
			new InputOption('--no-interaction', '-n', InputOption.VALUE_NONE, 'Do not ask any interactive question.'),
		])

	getDefaultCommands:() ->
		return [new ListCommand(),new HelpCommand()];

	getCommands:() ->
		return @commands

	add:(command) ->
		command.setApplication(this)

		if !command.isEnabled()
			command.setApplication(null)
			return

		if command.getDefinition() == undefined
			throw new Error('Command class '+command.constructor.name+' is not correctly initialized. You probably forgot to call the parent constructor.')

		@commands[command.getName()] = command

		return command

	addCommands:(commands) ->
		for command in commands
			@add(command)

	has:(name) ->
		return @commands[name]

	setVerbose:(level) ->
		@verbose = level

	getCommandName:(input) ->
		return input.getFirstArgument()

	getName:() ->
		return @name

	getVersion:() ->
		return @version

	setName:(@name) ->
		return this

	setVersion:(@version) ->
		return this

	getLongVersion:() ->
		versionMessage = 'Konsserto'

		if @getName() != undefined
			versionMessage = @getName()

		if @getVersion() != undefined
			versionMessage +=' version '+@getVersion()

		return versionMessage

	run:(input) ->
		if input == undefined
			input = new ArgvInput()

		@configureIO(input)
		ecode = -1

		try
			ecode = @doRun(input)
		catch e
			console.info('\n  '+cc.white.bgRed(e))
			console.info('\n  '+@running.getSynopsis())
			ecode = 255
			if @verbose > 0 then throw e else process.exit(ecode)

		return ecode

	configureIO:(input) ->
		if input.hasParameterOption(['--no-interaction','-n'])
			input.setInteractive(false)

		if input.hasParameterOption(['--verbose','-v'])
			@setVerbose(1)

	doRun:(input) ->
		if input.hasParameterOption(['--version','-V'])
			console.info(@getLongVersion())
			return 0

		name = @getCommandName(input)

		if input.hasParameterOption(['--help','-h'])
			if name == undefined
				name = 'help'
				input = new ArrayInput({command:'help'})
			else
				@needHelp = true

		if name == undefined
			name = 'list'
			input = new ArrayInput({command:name})

		command = @find(name)
		@running = command
		exitCode = @doRunCommand(command,input)
		@running = null

		return exitCode

	doRunCommand:(command,input) ->
		return command.run(input)

	find:(name) ->
		@get(name)

	get:(name) ->
		if @commands[name] == undefined
			throw new Error('The command \''+name+'\' does not exist.')

		command = @commands[name]

		if @needHelp
			@needHelp = false
			helpCommand = @get('help')
			helpCommand.setCommand(command)
			return helpCommand

		return command


module.exports = ConsoleApplication

