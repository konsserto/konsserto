###
 * This file is part of the Konsserto package.
 *
 * (c) Marvin Frachet <marvin@konsserto.com>
 * (c) Jessym Reziga <jessym@konsserto.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
###

fs = use('fs')

Directory = use('@Konsserto/Component/Finder/Directory')

#
# DirectoryFinder
#
# @author Marvin Frachet <marvin@konsserto.com>
#
class DirectoryFinder


	constructor: ()->
		###
    		Instanciation of the directory finder
    	###
		@directories = []

	getDirs: (rootDir, recursive)->
		###
    		Get the list of all the directories at the path chosen, with recursive possibily
    	###
		files = fs.readdirSync(rootDir)
		for file in files
			if file[0] != '.'
				filePath = "#{rootDir}/#{file}"
				stat = fs.statSync(filePath)
				if stat.isDirectory()
					@directories.push(new Directory(file, rootDir))
					if recursive
						@getDirs(rootDir + "/" + file, recursive)

	name: (name)->
		###
    		Reduce the directories list with directories that match the name passed in parameter
    	###
		new_directories = []
		for file in @directories
			if file.getName().match name
				new_directories.push file
		@directories = new_directories

	notName: (name)->
		###
    		Reduce the directories list with directories that doesn't match the name passed in parameter
    	###
		new_directories = []
		for file in @directories
			if !file.getName().match name
				new_directories.push file
		@directories = new_directories

	sortBy: (orderby, orderway) ->
		###
    		Sort the directories list by the "orderBy" key, in the "orderway" direction
    	###
		if !orderway
			@directories.sort (a, b)->
				return if a[orderby] >= b[orderby] then 1 else -1
		else
			@directories.sort (a, b)->
				return if a[orderby] >= b[orderby] then -1 else 1

	getResult: ()->
		###
    		Get the final result of all the different tasks made by the directory finder
    	###
		return @directories


module.exports = DirectoryFinder