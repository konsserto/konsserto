
/*
 * This file is part of the Konsserto package.
 *
 * (c) Marvin Frachet <marvin@konsserto.com>
 * (c) Jessym Reziga <jessym@konsserto.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
var File, fs;

fs = require("fs");

File = (function() {
  function File(name, relativePath) {
    this.name = name;
    this.relativePath = relativePath;

    /*
      		Instanciation of file, with his name and his relative path
     */
    if (this.relativePath.charAt(this.relativePath.length - 1) !== '/') {
      this.relativePath += '/';
    }
    this.relativePathName = this.relativePath + this.name;
    this.file = fs.statSync(this.relativePathName);
  }

  File.prototype.getSize = function() {

    /*
      		Get the file size
     */
    return this.file.size;
  };

  File.prototype.getAddedTime = function() {

    /*
      		Get the date of creation of the file
     */
    return this.file.atime;
  };

  File.prototype.getUpTime = function() {

    /*
      		Get the date of modification of the file
     */
    return this.file.mtime;
  };

  File.prototype.getRelativePath = function() {

    /*
      		Get the relative path of the file
     */
    return this.relativePath;
  };

  File.prototype.getRelativePathName = function() {

    /*
      		Get the realtive path with the name of the file
     */
    return this.relativePathName;
  };

  File.prototype.getName = function() {

    /*
      		Get the name of the file
     */
    return this.name;
  };

  File.prototype.getExtension = function() {

    /*
      		Get the extension of the file
     */
    var ext;
    ext = this.name.split('.').pop();
    if (ext === this.name) {
      return '';
    }
    return ext;
  };

  File.prototype.getContent = function() {

    /*
      		Get the content of the file
     */
    return fs.readFileSync(this.relativePathName, {
      encoding: 'utf-8'
    });
  };

  File.prototype.getNameWithoutExtension = function() {

    /*
      		Get the name without the extension
     */
    return this.name.replace('.' + this.getExtension(), '');
  };

  return File;

})();

module.exports = File;
