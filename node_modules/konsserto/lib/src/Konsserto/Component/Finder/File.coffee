###
 * This file is part of the Konsserto package.
 *
 * (c) Marvin Frachet <marvin@konsserto.com>
 * (c) Jessym Reziga <jessym@konsserto.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
###

fs = require("fs")

#
# File logically identify a physic file on filesystem
#
# @author Marvin Frachet <marvin@konsserto.com>
#
class File


	constructor: (@name, @relativePath)->
		###
    		Instanciation of file, with his name and his relative path
    	###
		if @relativePath.charAt(@relativePath.length - 1) != '/'
			@relativePath += '/'

		@relativePathName = @relativePath + @name
		@file = fs.statSync(@relativePathName)

	getSize: ()->
		###
    		Get the file size
    	###
		return @file.size

	getAddedTime: ()->
		###
    		Get the date of creation of the file
    	###
		return @file.atime

	getUpTime: ()->
		###
    		Get the date of modification of the file
    	###
		return @file.mtime

	getRelativePath: ()->
		###
    		Get the relative path of the file
    	###
		return @relativePath

	getRelativePathName: ()->
		###
    		Get the realtive path with the name of the file
    	###
		return @relativePathName

	getName: ()->
		###
    		Get the name of the file
		###
		return @name

	getExtension: ()->
		###
    		Get the extension of the file
    	###
		ext = @name.split('.').pop()
		if ext == @name
			return ''
		return ext

	getContent: ()->
		###
    		Get the content of the file
    	###
		return fs.readFileSync(@relativePathName, {encoding: 'utf-8'})

	getNameWithoutExtension: () ->
		###
    		Get the name without the extension
    	###
		return @name.replace('.' + @getExtension(), '')


module.exports = File