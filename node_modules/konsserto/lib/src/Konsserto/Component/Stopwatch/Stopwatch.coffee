###
 * This file is part of the Konsserto package.
 *
 * (c) Marvin Frachet <marvin@konsserto.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
###

Event = use('@Konsserto/Component/Stopwatch/Event')

# Stopwatch
#
# @author Marvin Frachet <marvin@konsserto.com>
class Stopwatch

  # Class constructor
  constructor: ()->
    @eventList = []

  # Start a new event chronometer
  # @param {String} eventName The event name to start
  # @param {String} categoryName The category name (optional)
  start: (eventName, categoryName)->
    @eventList.push new Event(eventName, categoryName)

  # Stop an event chronometer
  # @param {String} eventName The event name to stop
  # @return {Event} The event finished
  stop: (eventName)->
    event = @getEvent(eventName)
    if event != null
      event.stopEvent()
      return event
    return null

  # Get an event chronometer
  # @param {String} eventName The event name to get
  # @return {Event} The event or null if not found
  getEvent: (eventName)->
    for r in @eventList
      if r.name == eventName
        return r
    return null

  # Register a new lap in an event chronometer
  # @param {String} eventName The event concerned by the lap
  lap: (eventName)->
    event = @getEvent(eventName)
    if event != null
      event.setPeriod()


module.exports = Stopwatch
