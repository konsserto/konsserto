
/*
 * This file is part of the Konsserto package.
 *
 * (c) Marvin Frachet <marvin@konsserto.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
var Event, Stopwatch;

Event = use('@Konsserto/Component/Stopwatch/Event');

Stopwatch = (function() {
  function Stopwatch() {
    this.eventList = [];
  }

  Stopwatch.prototype.start = function(eventName, categoryName) {
    return this.eventList.push(new Event(eventName, categoryName));
  };

  Stopwatch.prototype.stop = function(eventName) {
    var event;
    event = this.getEvent(eventName);
    if (event !== null) {
      event.stopEvent();
      return event;
    }
    return null;
  };

  Stopwatch.prototype.getEvent = function(eventName) {
    var r, _i, _len, _ref;
    _ref = this.eventList;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      r = _ref[_i];
      if (r.name === eventName) {
        return r;
      }
    }
    return null;
  };

  Stopwatch.prototype.lap = function(eventName) {
    var event;
    event = this.getEvent(eventName);
    if (event !== null) {
      return event.setPeriod();
    }
  };

  return Stopwatch;

})();

module.exports = Stopwatch;
