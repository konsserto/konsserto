
/*
 * This file is part of the Konsserto package.
 *
 * (c) Marvin Frachet <marvin@konsserto.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

/*
 * Event class in Stopwatch service #
This is the Event class documentation linked to the Stopwatch service
 */
var Event, Period;

Period = use('@Konsserto/Component/Stopwatch/Period');

Event = (function() {
  function Event(name, category) {
    this.name = name;
    this.category = category;
    this.periods = [];
    this.origin = new Date().getTime();
  }

  Event.prototype.stopEvent = function() {
    return this.stop = new Date().getTime();
  };

  Event.prototype.getStopTime = function() {
    return this.stop;
  };

  Event.prototype.getName = function() {
    return this.name;
  };

  Event.prototype.getOrigin = function() {
    return this.origin;
  };

  Event.prototype.getEndTime = function() {
    if (this.periods.length > 0) {
      return this.periods[this.periods.length - 1].getEndTime();
    }
    return null;
  };

  Event.prototype.getDurationPeriods = function() {
    var duration, p, _i, _len, _ref;
    duration = 0;
    _ref = this.periods;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      p = _ref[_i];
      duration += p.getDuration();
    }
    return duration / 1000;
  };

  Event.prototype.getDuration = function() {
    return (this.stop - this.origin) / 1000;
  };

  Event.prototype.getCategory = function() {
    return this.category;
  };

  Event.prototype.getPeriods = function() {
    return this.periods;
  };

  Event.prototype.setPeriod = function() {
    if (this.periods.length === 0) {
      return this.periods.push(new Period(this.origin));
    } else {
      return this.periods.push(new Period(this.periods[this.periods.length - 1].getEndTime()));
    }
  };

  return Event;

})();

module.exports = Event;
