MongoClient = use('mongodb').MongoClient
DBCONFIG = use('/app/config/config').database
cc = use('cli-color')

class MongodbAdapter

  @INSTANCE = undefined
  @CONNECTION = undefined


  @getInstance: ()->
    if !@INSTANCE
      @INSTANCE = new @
      @connect()
    return @INSTANCE

  @connect: ()->
    MongoClient.connect('mongodb://' + DBCONFIG.host + ':' + DBCONFIG.port + '/' + DBCONFIG.name + '', (err, db)->
      if err
        console.log cc.red('[ERROR MONGODB] An error occured with mongoDb, maybe de to : ')
        console.log cc.red('      - MongoDb is not started')
        console.log cc.red('      - Bad host configuration in /app/config/config, database part')
        console.log cc.red('      - Bad port configuration in /app/config/config, database part')
        console.log cc.red('      - Bad name configuration in /app/config/config, database part')
        console.log cc.red('      - Bad user or bad password configuration in /app/config/config, database part')
      else
        MongodbAdapter.CONNECTION = db
        MongodbAdapter.showConfigurations()
    )


  @showConfigurations: ()->
    console.log ''
    console.log '------------------------------------------------------------------'
    console.log cc.magentaBright('[DATABASE] MONGODB started and ready')
    console.log cc.magentaBright('           Host     : '+DBCONFIG.host)
    console.log cc.magentaBright('           Port     : '+DBCONFIG.port)
    console.log cc.magentaBright('           Database : '+DBCONFIG.name)
    console.log cc.magentaBright('           User     : '+DBCONFIG.user)
    console.log cc.magentaBright('           Password : '+DBCONFIG.password)
    console.log '------------------------------------------------------------------'
    console.log ''

  getAll: ()->
    MongodbAdapter.CONNECTION.collection('user').find({}).toArray((err, result)->
      console.log result
    )
    return []

  getById: (id, joins)->
    return {}

  getByCriteria: (criteria, joins)->
    return []

  add: (object)->
    return @

  remove: (object)->
    return @

  removeById: (id)->
    return @

  modify: (objectSource, newObject)->
    return @

  modifyById: (id, newObject)->
    return @

module.exports = MongodbAdapter