
/*
 * This file is part of the Konsserto package.
 *
 * (c) Jessym Reziga <jessym@konsserto.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
var FormValidator, Tools, formValidators, forms, orm;

forms = use('ks-forms');

formValidators = forms.validators;

orm = require('orm');

Tools = use('@Konsserto/Component/Static/Tools');

FormValidator = (function() {
  function FormValidator() {}

  FormValidator.prototype.matchField = function(match_field, message) {
    return formValidators.matchField(match_field, message);
  };

  FormValidator.prototype.matchValue = function(valueGetter, message) {
    return formValidators.matchValue(valueGetter, message);
  };

  FormValidator.prototype.required = function(message) {
    return formValidators.required(message);
  };

  FormValidator.prototype.requiresFieldIfEmpty = function(alternate_field, message) {
    return formValidators.requiresFieldIfEmpty(alternate_field, message);
  };

  FormValidator.prototype.min = function(val, message) {
    return formValidators.min(val, message);
  };

  FormValidator.prototype.max = function(val, message) {
    return formValidators.max(val, message);
  };

  FormValidator.prototype.range = function(min, max, message) {
    return formValidators.range(min, max, message);
  };

  FormValidator.prototype.minlength = function(val, message) {
    return formValidators.minlength(val, message);
  };

  FormValidator.prototype.maxlength = function(val, message) {
    return formValidators.maxlength(val, message);
  };

  FormValidator.prototype.rangelength = function(min, max, message) {
    return formValidators.rangelength(min, max, message);
  };

  FormValidator.prototype.regexp = function(re, message) {
    return formValidators.regexp(re, message);
  };

  FormValidator.prototype.color = function(message) {
    return formValidators.color(message);
  };

  FormValidator.prototype.email = function(message) {
    return formValidators.email(message);
  };

  FormValidator.prototype.url = function(include_localhost, message) {
    return formValidators.url(include_localhost, message);
  };

  FormValidator.prototype.date = function(message) {
    return formValidators.date(message);
  };

  FormValidator.prototype.alphanumeric = function(message) {
    return formValidators.alphanumeric(message);
  };

  FormValidator.prototype.digits = function(message) {
    return formValidators.digits(message);
  };

  FormValidator.prototype.integer = function(message) {
    return formValidators.integer(message);
  };

  return FormValidator;

})();

module.exports = FormValidator;
