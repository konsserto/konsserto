###
 * This file is part of the Konsserto package.
 *
 * (c) Jessym Reziga <jessym@konsserto.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
###

forms = use('ks-forms')
formValidators = forms.validators

Tools = use('@Konsserto/Component/Static/Tools')

#
# FormValidator
#
# @author Jessym Reziga <jessym@konsserto.com>
#
class FormValidator


	constructor:() ->
	
	matchField:(match_field, message) ->
		return formValidators.matchField(match_field, message)

	matchValue:(valueGetter, message) ->
		return formValidators.matchValue(valueGetter, message)

	required:(message) ->
		return formValidators.required(message)

	requiresFieldIfEmpty:(alternate_field, message) ->
		return formValidators.requiresFieldIfEmpty(alternate_field, message)

	min:(val, message) ->
		return formValidators.min(val, message)

	max:(val, message) ->
		return formValidators.max(val, message)

	range:(min, max, message) ->
		return formValidators.range(min, max, message)

	minlength:(val, message) ->
		return formValidators.minlength(val, message)

	maxlength:(val, message) ->
		return formValidators.maxlength(val, message)

	rangelength:(min, max, message) ->
		return formValidators.rangelength(min, max, message)

	regexp:(re, message) ->
		return formValidators.regexp(re, message)

	color:(message) ->
		return formValidators.color(message)

	email:(message) ->
		return formValidators.email(message)

	url:(include_localhost, message) ->
		return formValidators.url(include_localhost, message)

	date:(message) ->
		return formValidators.date(message)

	alphanumeric:(message) ->
		return formValidators.alphanumeric(message)

	digits:(message) ->
		return formValidators.digits(message)

	integer:(message) ->
		return formValidators.integer(message)


module.exports = FormValidator