###
 * This file is part of the Konsserto package.
 *
 * (c) Jessym Reziga <jessym@konsserto.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
###
    
forms = use('ks-forms')
formWidgets = forms.widgets

#
# FormField
#
# @author Jessym Reziga <jessym@konsserto.com>
#
class FormField

	
	constructor: (@name,@formName,@type,@options,predata = {}) ->
		@submit = false
		@csrf = false
		@options['value'] = predata[@name] if predata[@name]?
		@setSubmit() if type == 'submit'
		@setCsrf() if @name == '_csrf'
		@setHTMLfields()

	setSubmit:() ->
		@submit = true
		@options['widget'] = formWidgets.submit(@options)
		@options['value'] = @name

	setCsrf:() ->
		@csrf = true
		@getFullname = () -> return @name

	handleSubmit:() ->
		
		if @isSubmit()
			value = @getCompiled()['value']
			
			if value != '' && value != undefined && value != null
				@isClicked = ()=> return true
			else
				@isClicked = ()=> return false
			
			@getCompiled()['value'] = @name

	isSubmit:() ->
		return @submit

	isCsrf:() ->
		return @csrf

	getId:() ->
		return @formName+'_'+@name

	getFullname:() ->
		return @formName+'['+@name+']'

	getShortname:() ->
		m = @name.match('\\[(.+)\\]')
		if m? && m.length >=2
			return m[1]
		return ''

	setHTMLfields:() ->
		@addDefault(@options,'id',@getId())
		@addDefault(@options,'fullname',@getFullname())
		@addDefault(@options,'shortname',@name)

	addDefault:(object,field,value) =>
		object[field] ?= value

	getName:() ->
		return @name

	getType:() ->
		return @type

	getOptions:() ->
		return @options

	setCompiled:(@compiled) ->
		return this

	getCompiled:() ->
		return @compiled

	isClicked: () ->

		if !@isSubmit()
			throw new Error('You can\'t call isClicked on a non submit field')

	getData:() ->
		return @compiled.data


module.exports = FormField



