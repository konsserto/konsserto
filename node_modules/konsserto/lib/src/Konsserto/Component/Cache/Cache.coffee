###
 * This file is part of the Konsserto package.
 *
 * (c) Marvin Frachet <marvin@konsserto.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
###

node_cache = use("node-cache")

CONFIG = use('/app/config/config')

#
# Cache allows to store temporarily data and get it quickly,
# by getting/setting keys pair with value
#
# @author Marvin Frachet <marvin@konsserto.com>
#
class Cache

	# Constructor
	#
	# Initialize the node_cache and set a cache timeout
	#
	constructor: ()->
		@cache = new node_cache({checkperiod: CONFIG.cacheTime})

	# Adding a new entry in the cache using key => value
	#
	# @param key [String]
	# @param value
	#
	set: (key, value)->
		@cache.set key, value

	# Remove an entry in the cache store by a given key name
	#
	# @param key [String]
	#
	remove: (key)->
		@cache.del key

	# Remove multiple entries in the cache by an array of keys
	#
	# @param key [Array<String>]
	#
	removeMultiple: (keys)->
		@cache.del(keys)

	# Get a data paired to a given key
	#
	# @param key [String]
	# @return [Object] the value paired with key
	#
	get: (key)->
		return @cache.get key

	# Get datas paired to the given array of keys
	#
	# @param key [Array<String>]
	# @return [Object] multiple values
	#
	getMultiple: (keys)->
		return  @cache.get(keys)

	# Get some statistics about data stored in cache
	#
	# @return [Object] Stats
	#
	getStats: ()->
		return @cache.getStats()

	# Flush everything in the cache
	flushAll: ()->
		@cache.flushAll()


module.exports = Cache