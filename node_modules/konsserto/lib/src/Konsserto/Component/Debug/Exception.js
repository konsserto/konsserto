
/*
 * This file is part of the Konsserto package.
 *
 * (c) Jessym Reziga <jessym@konsserto.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
var Exception,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Exception = (function(_super) {
  __extends(Exception, _super);

  function Exception(message, level, htmlMessage, toString) {
    this.message = message != null ? message : 'Exception thrown';
    this.level = level;
    this.htmlMessage = htmlMessage;
    this.toString = toString;
    this.name = this.constructor.name;
  }

  Exception.prototype.setName = function(name) {
    this.name = name;
    return this;
  };

  Exception.prototype.setLevel = function(level) {
    this.level = level;
    return this;
  };

  Exception.prototype.setMessage = function(message) {
    this.message = message;
    return this;
  };

  Exception.prototype.setHtmlMessage = function(htmlMessage) {
    this.htmlMessage = htmlMessage;
    return this;
  };

  Exception.prototype.setToString = function(toString) {
    this.toString = toString;
    return this;
  };

  Exception.prototype.getName = function() {
    return this.name;
  };

  Exception.prototype.getLevel = function() {
    return this.level;
  };

  Exception.prototype.getMessage = function() {
    return this.message;
  };

  Exception.prototype.getHtmlMessage = function() {
    return this.htmlMessage;
  };

  Exception.prototype.toString = function() {
    return this.toString;
  };

  return Exception;

})(Error);

module.exports = Exception;
