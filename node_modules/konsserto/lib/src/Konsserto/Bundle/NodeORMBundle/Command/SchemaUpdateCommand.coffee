###
 * This file is part of the Konsserto package.
 *
 * (c) Jessym Reziga <jessym@konsserto.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
###

cc = use('cli-color')
file_helper = use('fs')
path = use('path')
Q = use('q')
Table = use('cli-table');

Command = use('@Konsserto/Component/Console/Command')
Database = use('@Konsserto/Component/ORM/Database')
Filesystem = use('@Konsserto/Component/Filesystem/Filesystem')
InputArgument = use('@Konsserto/Component/Console/Input/InputArgument')
InputOption = use('@Konsserto/Component/Console/Input/InputOption')
Tools = use('@Konsserto/Component/Static/Tools');

#
# SchemaUpdateCommand
#
# @author Jessym Reziga <jessym@konsserto.com>
#
class SchemaUpdateCommand extends Command


	create:() ->
		@setName('schema:update')
		@setDescription('Generate schema in database')
		@setHelp('  The command %command.name% create the schema into the database.\n Example:\n  %command.full_name%')

	execute: (input) ->
		table = new Table({chars:@getArrayChars()});
		table.push(['Konsserto Schema Update'])
		@write('\n'+table.toString()+'\n')
		@write("Sync database "+cc.green("start"))

		em = @getContainer().get('entity_manager')
		db = @getContainer().get('database')

		db.asyncConnect(()=>
			entities = em.getEntitiesInstance()
			ets = []
			for path, entityInstance of entities
				ets.push({path:path,model:entityInstance.getModelInstance()})

			index = 0;
			Tools.promiseWhile(()->
				return index < ets.length
			,() =>
				path = ets[index].path
				model = ets[index].model
				model.sync((err)=>
					if err
						@write(err)
					else
						@write('Sync '+path+' '+cc.green('[Updated !]'))
				)
				index++
				return Q.delay(500)
			).then(()=>
				@write("Sync database "+cc.red("finished"))
				process.exit(0)
			).done()
		)





module.exports = SchemaUpdateCommand;

