###
 * This file is part of the Konsserto package.
 *
 * (c) Jessym Reziga <jessym@konsserto.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
###

Security = use('/app/config/security')
TwigExtension = use('@Konsserto/Vendor/Twig/Extension/TwigExtension')
TwigFunctionMethod = use('@Konsserto/Vendor/Twig/Extension/TwigFunctionMethod')

#
# TwigFunctionExtension
#
# @author Jessym Reziga <jessym@konsserto.com>
#
class TwigFunctionExtension extends TwigExtension


	constructor:(@router,@application) ->
		super constructor


	getFunctions:() =>
		return [
			{name:'echo', access: new TwigFunctionMethod(@echo)},
			{name:'path', access: new TwigFunctionMethod(@path)},
			{name:'asset', access: new TwigFunctionMethod(@asset)},
			{name:'socket', access: new TwigFunctionMethod(@socket)},
			{name:'form_start', access: new TwigFunctionMethod(@formStart)},
			{name:'form_label', access: new TwigFunctionMethod(@formLabel)},
			{name:'form_errors', access: new TwigFunctionMethod(@formErrors)},
			{name:'form_error', access: new TwigFunctionMethod(@formError)},
			{name:'form_widget', access: new TwigFunctionMethod(@formWidget)},
			{name:'form_row', access: new TwigFunctionMethod(@formRow)},
			{name:'form_end', access: new TwigFunctionMethod(@formEnd)},
			{name:'form_rest', access: new TwigFunctionMethod(@formRest)}
		]



	socket:=>
		return '<script src="/socket.io/socket.io.js"></script>'

	echo:(str) =>
		return '<pre>Echo : '+str+'</pre>'

	path:(name,args) =>
		return @router.generate(name,args)

	asset:(file) =>
		protocol = if @application.sslActive() then 'https' else 'http'
		return protocol+'://'+@router.getHost()+'/web/'+file

	formStart:(form,options,view) =>
		return form.formStart(options,view)

	formErrors:(form,view) =>
		return form.formErrors(view)

	formError:(form,field,view) =>
		return form.formError(field,view)

	formLabel:(form,field,view) =>
		return form.formLabel(field,view)

	formWidget:(form,field,view) =>
		return if field? then form.formWidget(field,view) else form.formWidgets()

	formRow:(form,field,view) =>
		return  form.formRow(field,view)

	formEnd:(form,view) =>
		return form.formEnd(view)

	formRest:(form) =>
		return form.formRest()


module.exports = TwigFunctionExtension