###
 * This file is part of the Konsserto package.
 *
 * (c) Jessym Reziga <jessym@konsserto.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
###

cc = use('cli-color')
filesystem = use('fs')
path = use('path')
Table = use('cli-table');

Command = use('@Konsserto/Component/Console/Command')
Filesystem = use('@Konsserto/Component/Filesystem/Filesystem')
InputArgument = use('@Konsserto/Component/Console/Input/InputArgument')
InputOption = use('@Konsserto/Component/Console/Input/InputOption')
Tools = use('@Konsserto/Component/Static/Tools');

#
# AssetsInstallCommand
#
# @author Jessym Reziga <jessym@konsserto.com>
#
class AssetsInstallCommand extends Command


	create:() ->
		@setName('assets:install')
		@setDescription('Manage assets and installs bundles web assets under a public web directory')
		@setDefinition([new InputArgument('target',InputArgument.OPTIONAL,'The target directory','web')])
		@setHelp('  The command %command.name% installs bundle assets into a given directory.\n Example:\n  %command.full_name% web')




	execute:(input) ->

		target = path.normalize(process.cwd()+'/'+input.getArgument('target')+'/')

		table = new Table({chars:@getArrayChars()});
		table.push(['Konsserto Assets Installation'])
		@write('\n\n'+table.toString()+'\n')

		if (filesystem.existsSync(target))

			target = target + 'bundles/'
			Filesystem.mkdir(target,755,true)

			for name,bundle of @getContainer().get('Application').getBundles()
				bundleTarget = path.normalize(target + Tools.replaceFinalOccurence(bundle.getName().toLowerCase(),'bundle'))
				bundlePublic = bundle.getPublicPath()

				if filesystem.existsSync(bundlePublic)
					Filesystem.mkdir(bundleTarget,755)
					Filesystem.copytree(bundle.getPublicPath(), bundleTarget)

		else
			throw new Error('Directory doesn\'t exists : '+target)

		return 0




module.exports = AssetsInstallCommand;

