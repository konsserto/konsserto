
/*
 * This file is part of the Konsserto package.
 *
 * (c) Jessym Reziga <jessym@konsserto.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
var SocketDefinition;

SocketDefinition = (function() {
  function SocketDefinition(registeredSocket, prefix) {
    var controller, _ref, _ref1;
    this.registeredSocket = registeredSocket;
    controller = this.registeredSocket.controller.split(':');
    this.name = this.registeredSocket.name;
    this.bundleName = controller[0];
    this.controllerName = controller[1];
    this.methodName = controller[2];
    this.async = (_ref = this.registeredSocket.async) != null ? _ref : false;
    this.connection = (_ref1 = this.registeredSocket.connection) != null ? _ref1 : false;
    this.listener = this.registeredSocket.listener;
    this.needPrefix = true;
    if ((this.registeredSocket.prefix != null) && !this.registeredSocket.prefix) {
      this.needPrefix = false;
    }
    this.prefix = prefix;
    this.rawEvent = this.registeredSocket.event;
    this.event = this.addPrefixOnSocket(prefix);
  }

  SocketDefinition.prototype.addPrefixOnSocket = function(prefix) {
    if ((prefix != null) && this.needPrefix) {
      return prefix + this.rawEvent;
    }
    return this.rawEvent;
  };

  SocketDefinition.prototype.setEvent = function(event) {
    this.event = event;
    return this;
  };

  SocketDefinition.prototype.setBundleName = function(bundleName) {
    this.bundleName = bundleName;
    return this;
  };

  SocketDefinition.prototype.setControllerName = function(controllerName) {
    this.controllerName = controllerName;
    return this;
  };

  SocketDefinition.prototype.setMethodName = function(methodName) {
    this.methodName = methodName;
    return this;
  };

  SocketDefinition.prototype.setAsync = function(async) {
    this.async = async;
    return this;
  };

  SocketDefinition.prototype.setName = function(name) {
    this.name = name;
    return this;
  };

  SocketDefinition.prototype.isAsynchronous = function() {
    return this.async;
  };

  SocketDefinition.prototype.isConnectionListener = function() {
    return this.connection;
  };

  SocketDefinition.prototype.getEvent = function() {
    return this.event;
  };

  SocketDefinition.prototype.getRawEvent = function() {
    return this.rawEvent;
  };

  SocketDefinition.prototype.getBundleName = function() {
    return this.bundleName;
  };

  SocketDefinition.prototype.getControllerName = function() {
    return this.controllerName;
  };

  SocketDefinition.prototype.getMethodName = function() {
    return this.methodName;
  };

  SocketDefinition.prototype.getName = function() {
    return this.name;
  };

  SocketDefinition.prototype.getListener = function() {
    return this.listener;
  };

  return SocketDefinition;

})();

module.exports = SocketDefinition;
