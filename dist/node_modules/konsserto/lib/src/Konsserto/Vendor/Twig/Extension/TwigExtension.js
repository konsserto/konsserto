
/*
 * This file is part of the Konsserto package.
 *
 * (c) Jessym Reziga <jessym@konsserto.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
var Security, Twig, TwigExtension, path;

path = use('path');

Security = use('/app/config/security');

Twig = use('ks-twig');

TwigExtension = (function() {
  function TwigExtension() {
    if (this['getFunctions'] != null) {
      this.registerMethods(this.getFunctions());
    }
    if (this['getFilters'] != null) {
      this.registerMethods(this.getFilters());
    }
  }

  TwigExtension.prototype.registerMethods = function(methods) {
    var method, _i, _len, _results;
    _results = [];
    for (_i = 0, _len = methods.length; _i < _len; _i++) {
      method = methods[_i];
      if (method.access.constructor.name === 'TwigFunctionMethod') {
        _results.push(Twig.extendFunction(method.name, method.access.getMethod()));
      } else if (method.access.constructor.name === 'TwigFilterMethod') {
        _results.push(Twig.extendFilter(method.name, method.access.getMethod()));
      } else {
        throw new Error('Unable to handle such extension :' + method.access.constructor.name);
      }
    }
    return _results;
  };

  return TwigExtension;

})();

module.exports = TwigExtension;
